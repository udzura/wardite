# Generated from lib/wardite/wasm_module.rb with RBS::Inline

module Wardite
  interface _WasmCallable
    def call: (Store, Array[wasmValue]) -> wasmFuncReturn

    def []: (Store, Array[wasmValue]) -> wasmFuncReturn
  end

  type wasmModuleSrc = Hash[Symbol, _WasmCallable] | WasmModule | HashModule

  type wasmModule = WasmModule | HashModule

  module WasmModule
    # @rbs fnname: Symbol
    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: wasmFuncReturn
    def invoke: (Symbol fnname, Store store, *untyped args) -> wasmFuncReturn

    # @rbs fnname: Symbol
    # @rbs return: _WasmCallable
    def callable: (Symbol fnname) -> _WasmCallable
  end

  class HashModule
    attr_accessor hash: Hash[Symbol, _WasmCallable]

    # @rbs ha: Hash[Symbol, _WasmCallable]
    def initialize: (untyped hash) -> untyped

    # @rbs fnname: Symbol
    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: wasmFuncReturn
    def invoke: (Symbol fnname, Store store, *untyped args) -> wasmFuncReturn

    # @rbs fnname: Symbol
    # @rbs return: _WasmCallable
    def callable: (Symbol fnname) -> _WasmCallable
  end
end
