# Generated from lib/wardite/wasi.rb with RBS::Inline

module Wardite
  class WasiSnapshotPreview1
    include ValueHelper

    include WasmModule

    attr_accessor fd_table: Array[IO | File]

    attr_accessor argv: Array[String]

    attr_accessor mapdir: Hash[String, String]

    # @rbs argv: Array[String]
    # @rbs mapdir: Hash[String, String]
    # @rbs return: void
    def initialize: (?argv: Array[String], ?mapdir: Hash[String, String]) -> void

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def args_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def args_sizes_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def environ_sizes_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def environ_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def clock_time_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def fd_prestat_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def fd_write: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def fd_read: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def fd_fdstat_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def fd_filestat_get: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def proc_exit: (Store store, Array[wasmValue] args) -> Object

    # @rbs store: Store
    # @rbs args: Array[wasmValue]
    # @rbs return: Object
    def random_get: (Store store, Array[wasmValue] args) -> Object

    private

    # @rbs buf: String|nil
    # @rbs return: Integer
    def unpack_le_int: (String | nil buf) -> Integer
  end
end
